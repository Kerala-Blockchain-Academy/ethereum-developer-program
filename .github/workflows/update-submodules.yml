name: Update Submodules

on:
  # Manual trigger
  workflow_dispatch:

  # Schedule to check for updates daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false # Don't recursively checkout nested submodules
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Initialize and update only direct submodules
        run: |
          echo "Initializing direct submodules only (not recursive)..."
          git submodule init
          git submodule update --depth 1  # Shallow clone for faster checkout

          echo "Current direct submodule status:"
          git submodule status --cached

      - name: Update direct submodules only
        run: |
          echo "Checking for updates to direct submodules..."

          # Store current commit hashes
          echo "Current submodule commits:"
          git submodule status | tee /tmp/before_update.txt

          # Update each direct submodule to latest commit (non-recursive)
          git submodule foreach --recursive=false '
            echo "Checking updates for direct submodule: $name"
            
            # Get the default branch
            DEFAULT_BRANCH=$(git ls-remote --symref origin HEAD | head -1 | cut -f2 | cut -d/ -f3)
            if [ -z "$DEFAULT_BRANCH" ]; then
              DEFAULT_BRANCH="main"
            fi
            echo "Default branch: $DEFAULT_BRANCH"
            
            # Fetch and get latest commit
            git fetch origin $DEFAULT_BRANCH
            LATEST_COMMIT=$(git rev-parse origin/$DEFAULT_BRANCH)
            CURRENT_COMMIT=$(git rev-parse HEAD)
            
            echo "Current commit: $CURRENT_COMMIT"
            echo "Latest commit:  $LATEST_COMMIT"
            
            if [ "$CURRENT_COMMIT" != "$LATEST_COMMIT" ]; then
              echo "Updates available for $name"
              git checkout $LATEST_COMMIT
            else
              echo "No updates for $name"
            fi
          '

          echo "Updated submodule commits:"
          git submodule status | tee /tmp/after_update.txt

      - name: Check for changes in direct submodules only
        id: changes
        run: |
          # Compare the working directory with the index to see if submodule pointers changed
          if git diff --quiet; then
            echo "No direct submodule changes detected"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Direct submodule changes detected"
            echo "changed=true" >> $GITHUB_OUTPUT
            
            echo "=== Changes detected ==="
            git diff --name-only
            echo "======================="
          fi

      - name: Show what changed
        if: steps.changes.outputs.changed == 'true'
        run: |
          echo "=== Submodule pointer changes ==="
          git diff --submodule=short
          echo ""
          echo "=== Detailed commit changes ==="
          git diff --submodule=log
          echo "================================"

      - name: Create Pull Request
        if: steps.changes.outputs.changed == 'true'
        run: |
          BRANCH_NAME="update-direct-submodules-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          git add .

          # Get the changes in a readable format
          SUBMODULE_CHANGES=$(git diff --cached --submodule=short HEAD)
          SUBMODULE_LOG=$(git diff --cached --submodule=log HEAD)

          # Create a summary of what submodules were updated
          UPDATED_SUBMODULES=$(git diff --cached --name-only | grep -v '/' | sort)

          git commit -m "🔄 update direct submodules to latest commits

          Updated the following direct submodules:
          $(echo "$UPDATED_SUBMODULES" | sed 's/^/- /')

          This update only affects direct submodules, not their nested submodules.

          ${SUBMODULE_CHANGES}"

          git push origin $BRANCH_NAME

          # Check for existing PRs and close them
          EXISTING_PR=$(gh pr list --state open --label "automated" --label "dependencies" --search "update direct submodules" --json number --jq '.[0].number' 2>/dev/null || echo "")

          if [ -n "$EXISTING_PR" ] && [ "$EXISTING_PR" != "null" ]; then
            echo "Closing existing PR #$EXISTING_PR..."
            gh pr close $EXISTING_PR --comment "Superseded by newer submodule updates"
          fi

          echo "Creating new PR..."
          gh pr create \
            --title "🔄 update direct submodules to latest commits" \
            --body "This PR updates **direct submodules only** to their latest commits. Nested submodules are **not affected**.

          ## Updated Submodules
          $(echo "$UPDATED_SUBMODULES" | sed 's/^/- `/' | sed 's/$/`/')

          ## Summary of Changes
          \`\`\`
          ${SUBMODULE_CHANGES}
          \`\`\`

          ## Detailed Commit History
          <details>
          <summary>Click to see detailed commit changes</summary>

          \`\`\`
          ${SUBMODULE_LOG}
          \`\`\`
          </details>

          ---
          🤖 This PR was automatically created by the Update Submodules workflow on $(date -u)
          ⚠️ **Note**: This only updates direct submodules. Nested submodules remain unchanged." \
            --base main \
            --head $BRANCH_NAME \
            --label "dependencies" \
            --label "automated" \
            --label "submodules" \
            --label "direct-only"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create summary
        run: |
          if [ "${{ steps.changes.outputs.changed }}" = "true" ]; then
            echo "## ✅ Direct Submodules Updated" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "A pull request has been created to update direct submodules only." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Updated Direct Submodules:" >> $GITHUB_STEP_SUMMARY
            git diff --cached --name-only | grep -v '/' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Note**: Nested submodules were not updated." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ℹ️ No Direct Submodule Updates" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All direct submodules are already up to date." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Current Direct Submodule Status:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            git submodule status >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi
